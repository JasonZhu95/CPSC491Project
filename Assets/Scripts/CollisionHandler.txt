using UnityEngine;
using UnityEngine.SceneManagement;
using System;
using System.IO;

public class CollisionHandler : MonoBehaviour
{
    [SerializeField] AudioClip explosion;
    [SerializeField] AudioClip levelComplete;
    [SerializeField] ParticleSystem explosionParticles;
    [SerializeField] ParticleSystem levelCompleteParticles;
    [SerializeField] float load_delay;
    AudioSource audioSource;
    bool isTransitioning = false;

    void Start() {
        audioSource = GetComponent<AudioSource>();
        // String path_to_game = Directory.GetCurrentDirectory();
        // String path_to_weather = Dicectory.GetCurrentDirectory() + "\\Assets\\Images\\Weather.png";
        // Debug.Log(path_to_game);
    }

    void OnCollisionEnter(Collision other)
    {
        if (isTransitioning == false) {
            switch (other.gameObject.tag) {
                case "Friendly":
                    break;
                case "Finish":
                    StartFinishSequence();
                    break;
                case "Fuel":
                    break;
                default:
                    StartCrashSequence();
                    break;
            }
        }
    }

    void StartCrashSequence() {
        isTransitioning = true;
        GetComponent<Movement>().enabled = false;
        audioSource.PlayOneShot(explosion);
        explosionParticles.Play();
        Invoke("ReloadLevel", load_delay);
    }

    void StartFinishSequence() {
        isTransitioning = true;
        GetComponent<Movement>().enabled = false;
        audioSource.PlayOneShot(levelComplete);
        levelCompleteParticles.Play();
        Invoke("LoadNextLevel", load_delay);
    }
    
    void LoadNextLevel()
    {
        int currentSceneIndex = SceneManager.GetActiveScene().buildIndex;
        int nextSceneIndex = currentSceneIndex + 1;
        if (nextSceneIndex == SceneManager.sceneCountInBuildSettings)
        {
            nextSceneIndex = 0;
        }
        SceneManager.LoadScene(nextSceneIndex);
    }

    void ReloadLevel()
    {
        int currentSceneIndex = SceneManager.GetActiveScene().buildIndex;
        SceneManager.LoadScene(currentSceneIndex);
    }
}
